name: Test backend
on:
  workflow_call:
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: Bhacaz/checkout-files@v2
        with:
          files: ./backend .eslintignore .eslintrc.json

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v3
        with:
          path: |
            ./dist/*
            ./node_modules/*
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}-backend

      - name: Install dependencies
        run: npm ci

      - name: build
        run: npm run build
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ./dist/*
            ./node_modules/*
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}-backend

      - name: eslint validation
        run: npm run lint
  test:
    needs: setup
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ./dist/*
            ./node_modules/*
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}-backend
      - run: node -v

      - name: run database migrations
        run: npm run migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/test

      - name: run tests
        run: npm run test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/test
          JWT_TOKEN: JWT_TOKEN
          SALT_ROUNDS: 1